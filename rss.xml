<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lamentations</title><link>http://perryjer1.github.io/</link><description>"Is it nothing to you, all ye that pass by? behold, and see if there be any sorrow like unto my sorrow"</description><atom:link href="http://perryjer1.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Tue, 07 Nov 2017 17:58:09 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Deep Learning: Building Intuition, Part I</title><link>http://perryjer1.github.io/posts/deep-learning-building-intuition-part-i/</link><dc:creator>Jeremiah Perry</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Deep-Learning:-Building-Intuition,-Part-I"&gt;Deep Learning: Building Intuition, Part I&lt;a class="anchor-link" href="http://perryjer1.github.io/posts/deep-learning-building-intuition-part-i/#Deep-Learning:-Building-Intuition,-Part-I"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In this post, I use a neural network with a single hidden layer to approximate a simple nonlinear function, and I will investigate how changing the number of neurons helps in learning the function representation.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://perryjer1.github.io/posts/deep-learning-building-intuition-part-i/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>http://perryjer1.github.io/posts/deep-learning-building-intuition-part-i/</guid><pubDate>Mon, 06 Nov 2017 21:53:07 GMT</pubDate></item><item><title>C++ sorting</title><link>http://perryjer1.github.io/posts/c%2B%2B-sorting/</link><dc:creator>Jeremiah Perry</dc:creator><description>&lt;div&gt;&lt;p&gt;I was running some C++ code that was sorting a vector based on a
custom function, something like this:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://perryjer1.github.io/posts/c%2B%2B-sorting/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>c++</category><guid>http://perryjer1.github.io/posts/c%2B%2B-sorting/</guid><pubDate>Tue, 20 Jun 2017 20:38:38 GMT</pubDate></item><item><title>Pythagorean triples</title><link>http://perryjer1.github.io/posts/pythagorean-triples/</link><dc:creator>Jeremiah Perry</dc:creator><description>&lt;div&gt;&lt;p&gt;I was looking for a way to generate Pythagorean triples and figured
there had to be some sort of formula or algorithm. And of course there
is but I did not expect to see one from Euclid. Euclid! What else did
that guy do? It is always humbling to learn something from someone
that lived over two thousand years ago.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://perryjer1.github.io/posts/pythagorean-triples/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>mathjax</category><guid>http://perryjer1.github.io/posts/pythagorean-triples/</guid><pubDate>Thu, 08 Jun 2017 14:54:40 GMT</pubDate></item><item><title>Confusion Matrix</title><link>http://perryjer1.github.io/posts/confusion-matrix/</link><dc:creator>Jeremiah Perry</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Confusion-Matrix"&gt;Confusion Matrix&lt;a class="anchor-link" href="http://perryjer1.github.io/posts/confusion-matrix/#Confusion-Matrix"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Here are my notes on the &lt;a href="https://en.wikipedia.org/wiki/Confusion_matrix"&gt;confusion matrix&lt;/a&gt;. That page has a lot of detail and I found it useful to work through a specific example.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://perryjer1.github.io/posts/confusion-matrix/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>http://perryjer1.github.io/posts/confusion-matrix/</guid><pubDate>Fri, 02 Jun 2017 19:56:43 GMT</pubDate></item><item><title>Reading binary files with Python and Pandas</title><link>http://perryjer1.github.io/posts/reading-binary-files-with-python-and-pandas/</link><dc:creator>Jeremiah Perry</dc:creator><description>&lt;div&gt;&lt;p&gt;We use a lot of binary files at work for market data. There are pros
and cons that I don't want to argue about here but I'd like to focus
on a nice feature in pandas for loading binary data. And actually, it
is a numpy feature but I end up with a DataFrame so I think of it as
pandas.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://perryjer1.github.io/posts/reading-binary-files-with-python-and-pandas/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>http://perryjer1.github.io/posts/reading-binary-files-with-python-and-pandas/</guid><pubDate>Fri, 26 May 2017 20:10:36 GMT</pubDate></item><item><title>summary.lm in R</title><link>http://perryjer1.github.io/posts/summarylm-in-r/</link><dc:creator>Jeremiah Perry</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Matching-summary(lm(...))-output"&gt;Matching &lt;code&gt;summary(lm(...))&lt;/code&gt; output&lt;a class="anchor-link" href="http://perryjer1.github.io/posts/summarylm-in-r/#Matching-summary(lm(...))-output"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;These are my notes on matching the report that is printed when you call &lt;code&gt;summary&lt;/code&gt; on a linear model in R.&lt;/p&gt;
&lt;p&gt;We will use the &lt;code&gt;trees&lt;/code&gt; dataset. &lt;code&gt;Girth&lt;/code&gt; is the tree diameter in inches, &lt;code&gt;Height&lt;/code&gt; is the tree height in feet, &lt;code&gt;Volume&lt;/code&gt; is the amount of timber in cubic feet. &lt;/p&gt;&lt;p&gt;&lt;a href="http://perryjer1.github.io/posts/summarylm-in-r/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>http://perryjer1.github.io/posts/summarylm-in-r/</guid><pubDate>Wed, 24 May 2017 22:01:21 GMT</pubDate></item><item><title>Unicode in Python</title><link>http://perryjer1.github.io/posts/unicode-in-python/</link><dc:creator>Jeremiah Perry</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Unicode-in-Python"&gt;Unicode in Python&lt;a class="anchor-link" href="http://perryjer1.github.io/posts/unicode-in-python/#Unicode-in-Python"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;I don't have to deal with unicode issues too often but when I do, I forget this stuff every time because I don't have to deal with unicode issues too often. These are my notes to help jog that memory.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://perryjer1.github.io/posts/unicode-in-python/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>http://perryjer1.github.io/posts/unicode-in-python/</guid><pubDate>Mon, 22 May 2017 17:46:43 GMT</pubDate></item><item><title>R tip: dev.off()</title><link>http://perryjer1.github.io/posts/r-tip-devoff/</link><dc:creator>Jeremiah Perry</dc:creator><description>&lt;div&gt;&lt;p&gt;When plotting in R and changing parameters via &lt;code&gt;par&lt;/code&gt;, I have been very
careful about saving and restoring them:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://perryjer1.github.io/posts/r-tip-devoff/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>R</category><guid>http://perryjer1.github.io/posts/r-tip-devoff/</guid><pubDate>Fri, 19 May 2017 13:13:44 GMT</pubDate></item><item><title>Newton's Method</title><link>http://perryjer1.github.io/posts/newtons-method/</link><dc:creator>Jeremiah Perry</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Newton's-Method"&gt;Newton's Method&lt;a class="anchor-link" href="http://perryjer1.github.io/posts/newtons-method/#Newton's-Method"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;After posting the &lt;a href="http://perryjer1.github.io/posts/risk-parity-weights-in-r"&gt;R code for calculating risk parity weights&lt;/a&gt;, I thought I should review Newton's method.&lt;/p&gt;&lt;p&gt;&lt;a href="http://perryjer1.github.io/posts/newtons-method/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>math</category><guid>http://perryjer1.github.io/posts/newtons-method/</guid><pubDate>Fri, 12 May 2017 14:33:57 GMT</pubDate></item><item><title>Risk Parity Weights in R</title><link>http://perryjer1.github.io/posts/risk-parity-weights-in-r/</link><dc:creator>Jeremiah Perry</dc:creator><description>&lt;div&gt;&lt;p&gt;Every now and then I need to calculate risk parity weights in R. I
like to know how things are working under the hood and the solutions I
found were a little opaque. Fortunately I found a nice article that
gives a straightforward algorithm,
see &lt;a href="http://www.iinews.com/site/pdfs/joi_fall_2012_ra1.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://perryjer1.github.io/posts/risk-parity-weights-in-r/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>R</category><guid>http://perryjer1.github.io/posts/risk-parity-weights-in-r/</guid><pubDate>Fri, 05 May 2017 18:50:55 GMT</pubDate></item></channel></rss>